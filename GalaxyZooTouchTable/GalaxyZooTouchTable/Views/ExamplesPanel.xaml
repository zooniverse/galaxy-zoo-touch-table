<UserControl x:Class="GalaxyZooTouchTable.ExamplesPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Lib="clr-namespace:GalaxyZooTouchTable.Lib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Background="Transparent"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="300">

    <UserControl.Resources>
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MoveUpStoryboard">
            <DoubleAnimation BeginTime="0:0:0.15" Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MoveBackStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="BeginRotateArrowStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(RotateTransform.Angle)" To="180" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="ReturnRotateArrowStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(fa:ImageAwesome.RenderTransform).(RotateTransform.Angle)" Duration="0:0:0.1"/>
        </Storyboard>

        <Style x:Key="MainPanelStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Panel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RightArrowStyle" TargetType="{x:Type fa:ImageAwesome}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleArrow" TargetType="{x:Type fa:ImageAwesome}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="{Binding Path=ActualHeight, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource BoundMarginConverter}, ConverterParameter='Left=0.75 Top=0.25 Bottom=0.25'}"/>
            <Setter Property="Icon" Value="CaretRight"/>
            <Setter Property="Foreground" Value="White"/>
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource BeginRotateArrowStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ReturnRotateArrowStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderText" TargetType="{x:Type Viewbox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Angle" To="0" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="0" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[2].Y" To="0" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Angle" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[2].Y" Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GalaxyExamples" TargetType="{x:Type Border}">
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Background" Value="Transparent"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Opacity, RelativeSource={RelativeSource Self}}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmoothExampleBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>SmoothGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FeaturesExampleBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>FeaturesGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="FeaturesGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveUpStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StarExampleBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource GalaxyExamples}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsSelected}" Value="True"/>
                        <Condition>
                            <Condition.Binding>
                                <Binding Path="SelectedExample" Converter="{StaticResource ObjectEqualityStringConverter}">
                                    <Binding.ConverterParameter>
                                        <System:String>NotAGalaxy</System:String>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Condition.Binding>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedExample, Converter={StaticResource ObjectToTypeStringConverter}}" Value="NotAGalaxy">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveUpStoryboard}"/>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MoveBackStoryboard}"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SelectedItemText" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SelectedTextStackPanel" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation BeginTime="0:0:0.3" Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.25"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(StackPanel.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ActiveExample" TargetType="{x:Type RowDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <Lib:GridLengthAnimation BeginTime="0:0:0.18" Storyboard.TargetProperty="Height" From="1" To="3" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <Lib:GridLengthAnimation Storyboard.TargetProperty="Height" From="3" To="1" Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExampleImages" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="{Binding Path=ActualHeight, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource PercentSizeConverter}, ConverterParameter='0.075'}"/>
            <Setter Property="Width" Value="{Binding Path=ActualHeight, ElementName=SelectionPanel, Converter={StaticResource HidePanelConverter}, ConverterParameter='1'}"/>
            <Setter Property="Height" Value="{Binding Path=ActualHeight, ElementName=SelectionPanel, Converter={StaticResource HidePanelConverter}, ConverterParameter='1'}"/>
        </Style>

        <Style x:Key="LeftExampleImage" BasedOn="{StaticResource ExampleImages}" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="{Binding Path=ActualHeight, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource BoundMarginConverter}, ConverterParameter='Right=0.1'}"/>
        </Style>

        <Style x:Key="MiddleExampleImage" BasedOn="{StaticResource ExampleImages}" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="{Binding Path=ActualHeight, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource BoundMarginConverter}, ConverterParameter='Left=0.05 Right=0.05'}"/>
        </Style>

        <Style x:Key="RightExampleImage" BasedOn="{StaticResource ExampleImages}" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="{Binding Path=ActualHeight, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource BoundMarginConverter}, ConverterParameter='Left=0.1'}"/>
        </Style>

        <Style x:Key="HideWhenOpen" TargetType="{x:Type Border}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HideWhenClosed" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOpen}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Border x:Name="Panel" Style="{StaticResource MainPanelStyle}" Background="#55565A" CornerRadius="0,5,5,0">
            <Border.RenderTransform>
                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource HidePanelConverter}, ConverterParameter='-0.8'}"/>
            </Border.RenderTransform>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="28*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="18*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Border Style="{StaticResource HideWhenOpen}" Grid.Row="1" Grid.Column="2" Grid.RowSpan="4" Grid.ColumnSpan="2" CornerRadius="0,5,5,0" Background="{StaticResource MedGrayColor}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding OpenPanel}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Border>

                <Border Grid.RowSpan="2" Grid.ColumnSpan="3" Background="{StaticResource MedGrayColor}" CornerRadius="0,5,0,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding TogglePanel}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Border>

                <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" RenderTransformOrigin="0,1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding TogglePanel}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Viewbox Style="{StaticResource HeaderText}" HorizontalAlignment="Left">
                        <Viewbox.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="90"/>
                                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource HidePanelConverter}, ConverterParameter='0.87'}"/>
                                <TranslateTransform Y="{Binding Path=ActualWidth, ElementName=Panel, Converter={StaticResource HidePanelConverter}, ConverterParameter='0.2'}"/>
                            </TransformGroup>
                        </Viewbox.RenderTransform>
                        <TextBlock Text="Examples" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontWeight="Bold"/>
                    </Viewbox>

                    <Viewbox Grid.Row="1">
                        <TextBlock Text="Tap each item to learn more." Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontStyle="Italic"/>
                    </Viewbox>

                    <fa:ImageAwesome
                        Icon="ChevronRight"
                        Grid.Column="2"
                        Foreground="White"
                        Panel.ZIndex="1"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource RightArrowStyle}">
                        <fa:ImageAwesome.RenderTransform>
                            <RotateTransform/>
                        </fa:ImageAwesome.RenderTransform>
                    </fa:ImageAwesome>
                </Grid>

                <Grid x:Name="ExampleGrid" Style="{StaticResource HideWhenClosed}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource ActiveExample}" Height="1*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>

                    <Border Style="{StaticResource SmoothExampleBorder}" BorderThickness="0 1 0 0" BorderBrush="{StaticResource DarkGrayColor}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TouchDown">
                                <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Smooth}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="35*"/>
                                <RowDefinition Height="8"/>
                            </Grid.RowDefinitions>

                            <DockPanel Background="Transparent" Grid.Row="1">
                                <i:Interaction.Triggers>
                                    <Lib:HandlingEventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Smooth}"/>
                                    </Lib:HandlingEventTrigger>
                                </i:Interaction.Triggers>
                                <Viewbox>
                                    <TextBlock Foreground="White" Text="{Binding Smooth.Title}" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontWeight="Bold"/>
                                </Viewbox>
                                <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                    <fa:ImageAwesome.RenderTransform>
                                        <RotateTransform/>
                                    </fa:ImageAwesome.RenderTransform>
                                </fa:ImageAwesome>
                            </DockPanel>

                            <ScrollViewer Grid.Row="3" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" PanningMode="HorizontalOnly">
                                <StackPanel Orientation="Horizontal" x:Name="SelectionPanel">
                                    <Border Style="{StaticResource LeftExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Smooth.ImageOne}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource MiddleExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Smooth.ImageTwo}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource RightExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Smooth.ImageThree}"/>
                                        </Border.Background>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Border>

                    <Border Style="{StaticResource FeaturesExampleBorder}" BorderThickness="0 1 0 0" BorderBrush="{StaticResource DarkGrayColor}">
                        <Border.RenderTransform>
                            <TranslateTransform Y="{Binding Path=ActualHeight, ElementName=ExampleGrid, Converter={StaticResource HidePanelConverter}, ConverterParameter='0.33'}"/>
                        </Border.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TouchDown">
                                <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding Features}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="35*"/>
                                <RowDefinition Height="8"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="1" Background="Transparent">
                                <i:Interaction.Triggers>
                                    <Lib:HandlingEventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding Features}"/>
                                    </Lib:HandlingEventTrigger>
                                </i:Interaction.Triggers>
                                <Viewbox>
                                    <TextBlock Foreground="White" Text="{Binding Features.Title}" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontWeight="Bold"/>
                                </Viewbox>
                                <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                    <fa:ImageAwesome.RenderTransform>
                                        <RotateTransform/>
                                    </fa:ImageAwesome.RenderTransform>
                                </fa:ImageAwesome>
                            </DockPanel>

                            <ScrollViewer Grid.Row="3" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" PanningMode="HorizontalOnly">
                                <StackPanel Orientation="Horizontal">
                                    <Border Style="{StaticResource LeftExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Features.ImageOne}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource MiddleExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Features.ImageTwo}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource RightExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Features.ImageThree}"/>
                                        </Border.Background>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Border>

                    <Border Style="{StaticResource StarExampleBorder}" BorderThickness="0 1 0 0" BorderBrush="{StaticResource DarkGrayColor}">
                        <Border.RenderTransform>
                            <TranslateTransform Y="{Binding Path=ActualHeight, ElementName=ExampleGrid, Converter={StaticResource HidePanelConverter}, ConverterParameter='0.66'}"/>
                        </Border.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TouchDown">
                                <i:InvokeCommandAction Command="{Binding SelectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="35*"/>
                                <RowDefinition Height="8"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="1" Background="Transparent">
                                <i:Interaction.Triggers>
                                    <Lib:HandlingEventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding UnselectItem}" CommandParameter="{Binding NotAGalaxy}"/>
                                    </Lib:HandlingEventTrigger>
                                </i:Interaction.Triggers>
                                <Viewbox>
                                    <TextBlock Foreground="White" Text="{Binding NotAGalaxy.Title}" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla" FontWeight="Bold"/>
                                </Viewbox>
                                <fa:ImageAwesome Style="{StaticResource ExampleArrow}">
                                    <fa:ImageAwesome.RenderTransform>
                                        <RotateTransform/>
                                    </fa:ImageAwesome.RenderTransform>
                                </fa:ImageAwesome>
                            </DockPanel>

                            <ScrollViewer Grid.Row="3" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" PanningMode="HorizontalOnly">
                                <StackPanel Orientation="Horizontal">
                                    <Border Style="{StaticResource LeftExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding NotAGalaxy.ImageOne}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource MiddleExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding NotAGalaxy.ImageTwo}"/>
                                        </Border.Background>
                                    </Border>
                                    <Border Style="{StaticResource RightExampleImage}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding NotAGalaxy.ImageThree}"/>
                                        </Border.Background>
                                    </Border>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Border>

                    <ScrollViewer x:Name="ItemText" Style="{StaticResource SelectedItemText}" Grid.Row="1" PanningMode="VerticalOnly" VerticalScrollBarVisibility="Hidden">
                        <StackPanel Style="{StaticResource SelectedTextStackPanel}">
                            <StackPanel.RenderTransform>
                                <TranslateTransform X="{Binding Path=ActualWidth, ElementName=ItemText, Converter={StaticResource HidePanelConverter}, ConverterParameter='-1'}"/>
                            </StackPanel.RenderTransform>
                            <TextBlock TextWrapping="Wrap" Foreground="White" FontFamily="/GalaxyZooTouchTable;component/Fonts/#Karla">
                                <Run Text="{Binding SelectedExample.Description, Mode=OneWay}"/>
                                <LineBreak/><LineBreak/>
                                <Run Text="{Binding SelectedExample.Description2, Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
